from pycasse import *
from pycasse.parser import ststl_grammar, Parser

p = Parser()
# [ast, formula] = p("1", "expression")
# [ast, formula] = print(p("3*x*y^2*z^3 + x + x2*y^5 - 2", "expression"))
# [ast, formula] = p("G[0,10] (!(!(True)))")
# [ast, formula] = p("!(P[0.85 + p] (y - 2*w1 + 3*w2 <= 8))")
# [ast, formula] = p("(!(P[0.99] (0.5*w1 + 0.5*w2 <= 0.1))) & ((((True) & (True)) | (!(P[0.95] (w1 <= 0.2))) | (!(P[p] (w2 <= c)))) -> ((P[0.95] (w1 <= 0.2)) & (P[p] (w2 <= c))))")
# [ast, formula] = p("P[0.85 + y + 3*p**2] (y - 2*w1 + 3*w2 <= 8)")
# [ast, formula] = p("P[x] (3*x*y^2*z^3 + x => x2*y^5 - 2)")
# [ast, formula] = p("X(F[0,25] (3*x*y^2*z^3 + x => x2*y^5 - 2))")
# [ast, formula] = p("!((F[0,25](3*x*y^2*z^3 + x < x2*y^5 + 3)) U[0,12] (P[x] (3*x*y^2*z^3 + x => x2*y^5 - 2)))")
# [ast, formula] = p("(F[0,10] (3*x*y^2*z^3 + x => x2*y^5 - 2)) -> (G[1,12] (P[x] (3*x*y^2*z^3 + x => x2*y^5 - 2)))")
# [ast, formula] = p("!(!((F[0,10] (P[0.95+p] (3*x*y^2*z^3 + x => x2*y^5 - 2))) -> (G[1,12] (P[p] (3*x*y^2*z^3 + x => x2*y^5 - 2)))))")
# [ast, formula] = p("!(!(G[0,10] (x => 5)))")
# [ast, formula] = p("!((F[0,10] (P[1-p] (3*x*y^2*z^3 + x => x2*y^5 - 2))) & (-3.3*x*y33^2*z^3 - x^6*y + 1 > z) & (G[0,10] (3*x*y^2*z^3 + x => x2*y^5 - 2)))")
# [ast, formula] = p("G[0,10] ((F[1,14](x => 5)) & (x => 5))")
# [ast, formula] = p("(G[0,10] (x => 5)) U[0,10] (F[1,14] (x => 5))")
[ast, formula] = p("!((G[0,10] (x => 5)) U[0,10] (F[1,14] (P[p] (3*x*y^2*z^3 + x => x2*y^5 - 2))))")
# [ast, formula] = p("!(!((G[0,10] (x => 5)) U[0,10] (F[1,14] (P[p] (3*x*y^2*z^3 + x => x2*y^5 - 2)))))")
# [ast, formula] = p("(True) -> (True)")
# [ast, formula] = p("G[0,60] ((0.0 d_x_0^2 + 0.0 d_x_0 + 0.0 d_y_0^2 + 1.0 d_y_0 + -19.5 <= 0) & (0.0 d_x_0^2 + 0.0 d_x_0 + 0.0 d_y_0^2 + -1.0 d_y_0 + 15.0 <= 0) & (0.0 d_x_0^2 + -1.0 d_x_0 + 0.0 d_y_0^2 + 0.0 d_y_0 + 0.0 <= 0) & (0.0 d_x_0^2 + 1.0 d_x_0 + 0.0 d_y_0^2 + 0.0 d_y_0 + -200.0 <= 0))")
print(ast[0].find_horizon())
ast[0].printInfo()
negated = ast[0].push_negation()
negated.printInfo()